server:
  port: 9000

eureka:
  client:
    register-with-eureka: true #유레카 디스커버리 서버의 등록 여부
    fetch-registry: true #defalutZone의 유레카 서버에서 클라이언트 정보를 가져오는 것의 여부
    prefer-ip-address: true
    region: default
    availability-zones:
      default: default-zone
    service-url:
      defaultZone: http://3.35.51.218:8761/eureka/

spring:
  application:
    name: apigateway-service #유레카 서버에 등록되는 서비스 명
  cloud:
    gateway:
      routes: #응답을 보낼 목적지 URL, 필터 항목을 식별하기 위한 ID로 구성
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: #bo의 모든 서비스에 접근할때 로그인
            - Path=/user-service/bo/login
          filters:
            - RemoveRequestHeader=Cookie
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: #bo의 모든 서비스에 접근할때 회원가입
            - Path=/user-service/bo/sign-up/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: #bo의 모든 서비스에 접근할때 로그인,회원가입 빼고 토큰없으면 반려
            - Path=/user-service/bo/**
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: #내 정보 조회에 접근하려 할때 토큰 없으면 반려
            - Path=/user-service/info/**
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: #유저 라우팅
            - Path=/user-service/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates: #리뷰 수정 삭제 작성 로그인 했는지 확인
            - Path=/review-service/review
            - Method=PUT,POST,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates: #내 리뷰 조회 로그인 했는지 확인
            - Path=/review-service/review/user
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates: #리뷰 답변 수정 삭제 작성 로그인 했는지 여부 확인
            - Path=/review-service/answer
            - Method=PUT,POST,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates: #리뷰 서비스 라우팅
            - Path=/review-service/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates: #예약 차단
            - Path=/reservation-service/reservation/info
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates: #예약 차단
            - Path=/reservation-service/reservation
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates: #콘텐츠 수정 차단
            - Path=/reservation-service/content
            - Method=PUT
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates: #예약라우정
            - Path=/reservation-service/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: store-service
          uri: lb://STORE-SERVICE
          predicates: #매방 bo서비스 차단
            - Path=/store-service/bo/**
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: store-service
          uri: lb://STORE-SERVICE
          predicates: #매장 서비스 라우팅
            - Path=/store-service/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates: #상품 서비스 bo 로그인 안하고 이용시 차단
            - Path=/product-service/bo/**
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates: #상품 서비스 라우팅
            - Path=/product-service/**
          filters:
            - RemoveRequestHeader=Cookie

token:
  secret: lg-uplus-team3-secret-key-lg-uplus-team3-secret-key